substitutions:
  name: kc868-uair
  dallas_address: "0xC000000004D81528"

esphome:
  name: ${name}
  name_add_mac_suffix: true
  
  project:
    name: kincony.kc868-uair
    version: "1"
  
esp32:
  board: esp32dev

web_server:
  port: 80

dashboard_import:
  package_import_url: github://hzkincony/kc868-uair/kc868-uair.yaml@main

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

wifi:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "KC868-Uair Fallback Hotspot"

captive_portal:

# follow configure use for DS18B20 temperature sensor, SHT30 temperature and humidity sensor. WS2812B RGB LEDs.
i2c:
  sda: 4
  scl: 16
  scan: true
  id: bus_a

# Example configuration entry
dallas:
  - pin: GPIO27
    update_interval: 15s

# Individual sensors
sensor:
  - platform: dallas
    address: $dallas_address # your DS18B20 address
    name: "internal Temperature"

  # Example configuration entry
  - platform: sht3xd
    temperature:
      name: "extend Temperature"
    humidity:
      name: "extend Humidity"
    address: 0x44
    update_interval: 15s

light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: GPIO32 # Pin Define connected with LED strip
    num_leds: 4 #LEDs number
    rgb_order: GRB
    name: "Uair-Bottom-LED"
    effects:
      - addressable_rainbow: ##defined 7 effects styles
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:

  - platform: fastled_clockless
    chipset: WS2812B
    pin: GPIO33 # Pin Define connected with LED strip
    num_leds: 1 #LEDs number
    rgb_order: RGB
    name: "Uair-Vertical-LED"
    effects:
      - addressable_rainbow: ##defined 7 effects styles
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:
      
# first attempt to include IR devices      
remote_receiver:
  pin: GPIO19
  dump: all

remote_transmitter:
  pin: GPIO22
  # Infrared remotes use a 50% carrier signal
  carrier_duty_percent: 50%
